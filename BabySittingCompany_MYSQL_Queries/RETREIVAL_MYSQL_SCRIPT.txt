-- Query_1 languages spoken BY BABY_SITTERS (Inner join)

SELECT BABY_SITTER.SSN, BABY_SITTER.FULL_NAME, BABY_SITTER_LANGUAGE.LANGUAGE_SPOKEN
FROM BABY_SITTER INNER JOIN BABY_SITTER_LANGUAGE ON BABY_SITTER.SSN = BABY_SITTER_LANGUAGE.SSN;


-- Query_2 - count of all the employees in each branch

SELECT COMPANY.BRANCH_ID, COMPANY.BRANCH_NAME, COUNT(BABY_SITTER.SSN) as NUMBER_OF_EMPLOYEES

FROM COMPANY INNER JOIN BABY_SITTER ON COMPANY.BRANCH_ID = BABY_SITTER.BRANCH_ID

GROUP BY COMPANY.BRANCH_ID, COMPANY.BRANCH_NAME;

 

-- Query_3 - Determining number of hours worked by each baby sitter

-- MY SQL - TIMEDIFF FUNCTION DOESNOT WORK ON MS SQL (IT HAS ALTERNATIVE CALLED DATEDIFF)
 

SELECT FULL_NAME, AVAILABLE_DAY_OF_WEEK,TIMEDIFF(AVAILABLE_END_TIME,AVAILABLE_START_TIME) AS NUMBER_OF_HOURS
FROM BABY_SITTER
ORDER BY NUMBER_OF_HOURS DESC;

 

-- Query_4 - Employees who do not have contracts yet - will have NULL value in the contract ID

SELECT * FROM COMPANY
INNER JOIN BABY_SITTER ON BABY_SITTER.BRANCH_ID = COMPANY.BRANCH_ID
LEFT JOIN CONTRACT ON BABY_SITTER.SSN = CONTRACT.SSN

;

 

 
 

-- QUERY_5 - Update family email ID

 
UPDATE FAMILY_EMAIL

SET EMAIL = 'ijk@yahoo.com'

WHERE FAMILY_ID = 1 AND EMAIL = 'xyy@gmail.com';

 

-- Query_6 - Update family mobile number 


UPDATE FAMILY_MOBILE_NUMBER

SET MOBILE_NUMBER = '2345678908'

WHERE FAMILY_ID = 2 AND MOBILE_NUMBER = '2234567891';

 


 

-- Query_7 - Delete contract and child if contract got expired 30 days back - 


-- DATE DIFF FUNCTION HAS DIFFERENT ARGUMENTS IN MS SQL AND DIFFERENT IN MY SQL

-- MY SQL VERSION

SET SQL_SAFE_UPDATES = 0;
DELETE FROM CHILD WHERE CONTRACT_ID IN

(SELECT CONTRACT_ID FROM CONTRACT 

WHERE DATEDIFF(END_DATE,CAST(CURRENT_TIMESTAMP AS date)) < -30

);

DELETE FROM CONTRACT WHERE DATEDIFF(END_DATE,CAST(CURRENT_TIMESTAMP AS date)) < -30;

 

 


-- Query_8 - count number of families and number of children present in each branch 

 

CREATE VIEW FIND_NUMBER_OF_CUSTOMERS AS

(

SELECT 

A.BRANCH_ID, A.BRANCH_NAME, 

COUNT(FAMILY.FAMILY_ID) AS NUMBER_OF_FAMILIES,

(SELECT COUNT(CHILD.CHILD_ID)

FROM COMPANY 

INNER JOIN FAMILY ON FAMILY.BRANCH_ID = COMPANY.BRANCH_ID

INNER JOIN CHILD ON CHILD.FAMILY_ID = FAMILY.FAMILY_ID

WHERE COMPANY.BRANCH_ID = A.BRANCH_ID

GROUP BY COMPANY.BRANCH_ID) AS NUMBER_OF_CHILDREN

FROM COMPANY AS A

INNER JOIN FAMILY ON FAMILY.BRANCH_ID = A.BRANCH_ID

GROUP BY A.BRANCH_ID, A.BRANCH_NAME

);

 

SELECT * FROM FIND_NUMBER_OF_CUSTOMERS;

 

 

 

-- Query_9 -  estimate the monthly salary for baby sitters


-- MY SQL - TIMESTAMPDIFF IS NOT AVAILABLE IN MS SQL AND IT HAS AN ALTERNATIVE

CREATE VIEW ESTIMATED_MONTHLY_PAY AS (

SELECT FULL_NAME,CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) AS NUMBER_OF_HOURS,

CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) * HOURLY_PAY_RATE AS ESTIMATED_MONTHLY_PAY

FROM BABY_SITTER

GROUP BY  FULL_NAME, CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)), 

(CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) * HOURLY_PAY_RATE)

);

SELECT * FROM ESTIMATED_MONTHLY_PAY;

 



 

-- Query_10 - Total expenditure from each branch

-- MY SQL - TIMESTAMPDIFF IS NOT AVAILABLE IN MS SQL AND IT HAS AN ALTERNATIVE

WITH ESTIMATED_MONTHLY_PAY_CTE AS

(

SELECT BRANCH_ID,FULL_NAME,CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) AS NUMBER_OF_HOURS,

CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) * HOURLY_PAY_RATE AS ESTIMATED_MONTHLY_PAY

FROM BABY_SITTER

GROUP BY BRANCH_ID,FULL_NAME, CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)), 

(CAST(((TIMESTAMPDIFF(MINUTE, AVAILABLE_START_TIME, AVAILABLE_END_TIME))/60) AS DECIMAL(36,2)) * HOURLY_PAY_RATE)

 

)

SELECT COMPANY.BRANCH_ID, COMPANY.BRANCH_NAME, SUM(ESTIMATED_MONTHLY_PAY_CTE.ESTIMATED_MONTHLY_PAY) AS TOTAL_EXPENDITURE

FROM COMPANY

INNER JOIN ESTIMATED_MONTHLY_PAY_CTE ON COMPANY.BRANCH_ID = ESTIMATED_MONTHLY_PAY_CTE.BRANCH_ID

GROUP BY COMPANY.BRANCH_ID, COMPANY.BRANCH_NAME

ORDER BY TOTAL_EXPENDITURE DESC

 

 

 

-- Query_11 - Total income from each branch - 

 CREATE VIEW TOTAL_MONTHLY_INCOME AS(

SELECT C.BRANCH_ID, C.BRANCH_NAME,

SUM(CH.MONTHLY_FEE) AS MONTHLY_INCOME

FROM

COMPANY AS C

INNER JOIN FAMILY AS F ON C.BRANCH_ID = F.BRANCH_ID

INNER JOIN CHILD AS CH ON CH.FAMILY_ID = F.FAMILY_ID

GROUP BY C.BRANCH_ID, C.BRANCH_NAME

);

SELECT * FROM TOTAL_MONTHLY_INCOME;

 

 

 

 

 

 

-- Query_12 - Number of children filtered by gender in each branch

 

SELECT C.BRANCH_NAME, (SELECT COUNT(GENDER)

FROM

COMPANY

INNER JOIN FAMILY ON FAMILY.BRANCH_ID = COMPANY.BRANCH_ID

INNER JOIN CHILD ON FAMILY.FAMILY_ID = CHILD.FAMILY_ID

WHERE GENDER='Male' and BRANCH_NAME = C.BRANCH_NAME

GROUP BY COMPANY.BRANCH_NAME) AS NUMBER_OF_MALE,

(SELECT COUNT(GENDER)

FROM

COMPANY

INNER JOIN FAMILY ON FAMILY.BRANCH_ID = COMPANY.BRANCH_ID

INNER JOIN CHILD ON FAMILY.FAMILY_ID = CHILD.FAMILY_ID

WHERE GENDER='Female' and BRANCH_NAME = C.BRANCH_NAME

GROUP BY COMPANY.BRANCH_NAME) AS NUMBER_OF_FEMALE

FROM

COMPANY AS C

INNER JOIN FAMILY ON FAMILY.BRANCH_ID = C.BRANCH_ID

INNER JOIN CHILD ON FAMILY.FAMILY_ID = CHILD.FAMILY_ID

GROUP BY C.BRANCH_NAME

 

 

 

 

-- Query_13 - Families who have multiple children admitted for baby sitting

SELECT F.FAMILY_ID,F.FULL_NAME,COUNT(CHILD_ID) AS NUMBER_OF_CHILDREN

FROM FAMILY AS F

INNER JOIN CHILD AS C

ON F.FAMILY_ID = C.FAMILY_ID

GROUP BY F.FAMILY_ID,F.FULL_NAME

HAVING COUNT(CHILD_ID) > 1

 

 

-- Query_14 - LANGUAGES OFFERED IN EACH BRANCH

 

SELECT DISTINCT C.BRANCH_NAME, BL.LANGUAGE_SPOKEN AS LANGUAGE_OFFERED

FROM COMPANY AS C

INNER JOIN BABY_SITTER AS B ON C.BRANCH_ID = B.BRANCH_ID

INNER JOIN BABY_SITTER_LANGUAGE AS BL ON BL.SSN = B.SSN

 

 

 

-- Query_15 - Distinct skills of baby sitters from each branch

 

SELECT C.BRANCH_NAME, BS.SKILL, COUNT(*) AS NUMBER_OF_BABYSITTERS

FROM BABY_SITTER AS B

INNER JOIN BABY_SITTER_SKILL AS BS

ON BS.SSN = B.SSN

INNER JOIN COMPANY AS C ON C.BRANCH_ID = B.BRANCH_ID

GROUP BY C.BRANCH_NAME, BS.SKILL

ORDER BY C.BRANCH_NAME;

 

 

 

-- Query_16 - Number of families from each state and city

 

 

SELECT STATE, CITY, COUNT(FAMILY_ID) AS NUMBER_OF_FAMILIES

FROM FAMILY AS F

GROUP BY STATE, CITY

 

 

-- Query_17 - EXPECTED SERVICES AS PER THE CONTRACT

CREATE VIEW SERVICES_EXPECTED_FROM_CONTRACT AS (

SELECT B.SSN, B.FULL_NAME, C.START_DATE, C.END_DATE, CS.SERVICE_EXPECTED

FROM CONTRACT AS C

INNER JOIN BABY_SITTER AS B ON B.SSN = C.SSN

INNER JOIN CONTRACT_SERVICES AS CS ON CS.CONTRACT_ID = C.CONTRACT_ID

);


 

SELECT * FROM SERVICES_EXPECTED_FROM_CONTRACT

 

 

 

-- Query_18 - count of people filtered by nationality in each branch

 

 

SELECT C.BRANCH_NAME, B.NATIONALITY, COUNT(B.NATIONALITY) 

FROM COMPANY AS C

INNER JOIN BABY_SITTER AS B ON B.BRANCH_ID = C.BRANCH_ID

GROUP BY C.BRANCH_NAME,B.NATIONALITY

ORDER BY C.BRANCH_NAME

 

 

-- Query_19 -  CONTACT DETAILS OF EACH CHILD

 

CREATE VIEW CHILD_CONTACT_DETAILS AS

(

SELECT C.CHILD_ID, C.FULL_NAME AS CHILD_NAME, F.FULL_NAME AS GUARDIAN_NAME, FE.EMAIL, FM.MOBILE_NUMBER,

F.STREET, F.CITY, F.STATE, F.ZIP 

FROM FAMILY AS F 

INNER JOIN CHILD AS C ON C.FAMILY_ID = F.FAMILY_ID

INNER JOIN FAMILY_EMAIL AS FE ON FE.FAMILY_ID = F.FAMILY_ID

INNER JOIN FAMILY_MOBILE_NUMBER AS FM ON FM.FAMILY_ID = F.FAMILY_ID);

 

SELECT * FROM CHILD_CONTACT_DETAILS;

 

 

-- Query_20 -- LANGUAGES CHILDREN ARE COMFORTABLE IN 

SELECT CL.FAMILY_ID, CL.CHILD_ID, C.FULL_NAME AS CHILD_NAME, CL.LANGUAGE_SPOKEN, F.FULL_NAME AS GUARDIAN_NAME

FROM CHILD_LANGUAGES_SPOKEN AS CL

INNER JOIN CHILD AS C ON C.FAMILY_ID = CL.FAMILY_ID AND C.CHILD_ID = CL.CHILD_ID

INNER JOIN FAMILY AS F ON F.FAMILY_ID = C.FAMILY_ID

ORDER BY C.FULL_NAME










-- Query_21 - Determining performance levels of baby sitters based on number of hours worked

 

MY SQL - TIMEDIFF FUNCTION DOESNOT WORK ON MS SQL (IT HAS ALTERNATIVE CALLED DATEDIFF)
 

SELECT FULL_NAME, AVAILABLE_DAY_OF_WEEK,TIMEDIFF(AVAILABLE_END_TIME,AVAILABLE_START_TIME) AS NUMBER_OF_HOURS,

CASE 

WHEN RANK() OVER(ORDER BY TIMEDIFF(AVAILABLE_END_TIME,AVAILABLE_START_TIME) DESC) = 1 THEN 'Top performer'

WHEN RANK() OVER(ORDER BY TIMEDIFF(AVAILABLE_END_TIME,AVAILABLE_START_TIME)) = 1 THEN 'Least Performer'

ELSE 'Normal Performer'

END AS PERFORMANCE_LEVEL

FROM BABY_SITTER

ORDER BY NUMBER_OF_HOURS DESC;
